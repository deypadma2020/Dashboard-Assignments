{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyM6YwNd54znOEhSdlmQKGfr"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## Q1. Is it permissible to use several import statements to import the same module? What would the goal be? Can you think of a situation where it would be beneficial?"],"metadata":{"id":"clzIPEaET8DD"}},{"cell_type":"markdown","source":["Ans: -\n","\n","- The module is only loaded the first time the import statement is executed and there is no performance loss by importing it again. You can examine sys. modules to find out which modules have already been loaded.\n","- The module is only loaded the first time the import statement is executed and there is no performance loss by importing it again.\n","- "],"metadata":{"id":"-OX3dh4VT7_j"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"WtA_Hx3dT3_C"},"outputs":[],"source":[]},{"cell_type":"markdown","source":["## Q2. What are some of a module's characteristics? (Name at least one.)"],"metadata":{"id":"z3qmP7SqUFb2"}},{"cell_type":"markdown","source":["Ans: -\n","\n","A Python module is a file containing Python definitions and statements. A module can define functions, classes, and variables. A module can also include runnable code. Grouping related code into a module makes the code easier to understand and use."],"metadata":{"id":"FI3L_jJ5UKew"}},{"cell_type":"code","source":[],"metadata":{"id":"p0ZVxFVzUMcN"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q3. Circular importing, such as when two modules import each other, can lead to dependencies and bugs that aren't visible. How can you go about creating a program that avoids mutual importing?"],"metadata":{"id":"FkNLR7vlUM2m"}},{"cell_type":"markdown","source":["Ans: -\n","\n","Changing the name of the Working file different from the module which is imported in the script can avoid the Circular Imports problem. Import the module: Avoid importing objects or functions from a module that can cause Circular Imports. It is good to import the whole module to avoid the Circular Import."],"metadata":{"id":"KVRRWOTIUS4T"}},{"cell_type":"code","source":[],"metadata":{"id":"PO10fh-hUWC6"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q4. Why is _ _all_ _ in Python?"],"metadata":{"id":"OgJfZrqNUWey"}},{"cell_type":"markdown","source":["Ans: -\n","\n","A list of strings that define what variables have to be imported to another file is known as __all__ in Python. The variables which are declared in that list can only be used in another file after importing this file, the rest variables if called will throw an error."],"metadata":{"id":"uqppRqTWUbjr"}},{"cell_type":"code","source":[],"metadata":{"id":"RrLD-jANUdp3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q5. In what situation is it useful to refer to the _ _name_ _ attribute or the string '_ _main_ _'?"],"metadata":{"id":"Cv3SvAcuUeF3"}},{"cell_type":"markdown","source":["Ans: -\n","\n","It Allows You to Execute Code When the File Runs as a Script, but Not When It's Imported as a Module. For most practical purposes, you can think of the conditional block that you open with if __name__ == \"__main__\" as a way to store code that should only run when your file is executed as a script."],"metadata":{"id":"nw-1mAbIUpss"}},{"cell_type":"code","source":[],"metadata":{"id":"UPYJjjhdUrv4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q6. What are some of the benefits of attaching a program counter to the RPN interpreter application, which interprets an RPN script line by line?"],"metadata":{"id":"Lws0RZgxUsGj"}},{"cell_type":"markdown","source":["Ans: -\n","\n","This advantage of reverse Polish notation is that it removes the need for parentheses that are required by infix notation, since the stack holds all arguments in a last-in, first out progression. For example, to compute the expression (3 × 4) + (5 × 6), one would type 3, press Enter ↑ , and type 4."],"metadata":{"id":"T8uBg-4tUxCr"}},{"cell_type":"code","source":[],"metadata":{"id":"DdYnVpBoUxVM"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q7. What are the minimum expressions or statements (or both) that you'd need to render a basicprogramming language like RPN primitive but complete— that is, capable of carrying out any computerised task theoretically possible?"],"metadata":{"id":"HKQW8MhFU2Kd"}},{"cell_type":"markdown","source":["Ans: -\n","\n","Assignment statements initialize or change the value stored in a variable using the assignment operator =. "],"metadata":{"id":"quec-VsZU-bq"}},{"cell_type":"code","source":[],"metadata":{"id":"v-Jwic6FVBeo"},"execution_count":null,"outputs":[]}]}