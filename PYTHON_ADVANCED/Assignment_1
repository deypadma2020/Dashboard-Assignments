{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOXGHD2HFbg4fOcAHGiV8cZ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## Q1. What is the purpose of Python's OOP?"],"metadata":{"id":"PNmNO1_rbsXh"}},{"cell_type":"markdown","source":["Ans: -\n","\n","Object-oriented programming: As the name suggests, Object-Oriented Programming or OOPs refers to languages that uses objects in programming. Object-oriented programming aims to implement real-world entities like inheritance, hiding, polymorphism etc in programming. The main aim of OOP is to bind together the data and the functions that operate on them so that no other part of the code can access this data except that function.\n","\n","---\n","\n","In Python, object-oriented Programming (OOPs) is a programming paradigm that uses objects and classes in programming. It aims to implement real-world entities like inheritance, polymorphisms, encapsulation, etc. in the programming.\n"],"metadata":{"id":"bEBnBb8lbsKn"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"FNapdWmjH4pm"},"outputs":[],"source":[]},{"cell_type":"markdown","source":["## Q2. Where does an inheritance search look for an attribute?"],"metadata":{"id":"okDjCTg_b3VK"}},{"cell_type":"markdown","source":["Ans: -\n","\n","The inheritance search is simply a search of the tree from bottom to top looking for the lowest occurrence of an attribute name.\n","\n","\n","---\n","\n","Where does an inheritance search look for an attribute? An inheritance search looks for an attribute first in the instance object, then in the class the instance was created from, then in all higher superclasses, progressing from left to right (by default). The search stops at the first place the attribute is found.\n","\n","\n","---\n","\n","The whole point of a namespace tool like the class statement is to support name inheritance. In Python, inheritance happens when an object is qualified, and involves searching an attribute definition tree (one or more namespaces). Every time you use an expression of the form object."],"metadata":{"id":"hNmYde9xb9XT"}},{"cell_type":"code","source":[],"metadata":{"id":"PgI_TLW2b_CQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q3. How do you distinguish between a class object and an instance object?"],"metadata":{"id":"5jZg1F_Vb_mh"}},{"cell_type":"markdown","source":["Ans: -\n","\n","Class object : A compound data type that is often used to model a thing or concept in the real world. It bundles together the data and the operations that are relevant for that kind of data. Instance and object are used interchangeably.\n","\n","Instance Object : An object whose type is of some class.\n","\n","An instance is a specific representation of an object. An object is a generic thing while an instance is a single object that has been created in memory.\n","\n","\n","---\n","\n","Class variables are declared inside a class but outside of any function. Instance variables are declared inside the constructor which is the __init__method."],"metadata":{"id":"Aex7yN5ab_i6"}},{"cell_type":"code","source":[],"metadata":{"id":"xRE6K0XzcH4U"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q4. What makes the first argument in a class’s method function special?"],"metadata":{"id":"l-2nySbncLh4"}},{"cell_type":"markdown","source":["Ans: -\n","\n","In object-oriented programming, whenever we define methods for a class, we use self as the first parameter in each case.\n","\n","\n","---\n","\n","meth(args) becomes Class.\n","This is the reason the first parameter of a function in class must be the object itself. Writing this parameter as self is merely a convention. It is not a keyword and has no special meaning in Python.\n","\n","\n","---\n","\n","Often, the first argument of a method is called self . This is nothing more than a convention: the name self has absolutely no special meaning to Python."],"metadata":{"id":"9tZ0FZdZcZta"}},{"cell_type":"code","source":[],"metadata":{"id":"kN-IDdoocbuI"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q5. What is the purpose of the __init__ method?"],"metadata":{"id":"WkZeGhnSccQ5"}},{"cell_type":"markdown","source":["Ans: -\n","\n","\"init\" is a reseved method in python classes. It is called as a constructor in object oriented terminology. This method is called when an object is created from a class and it allows the class to initialize the attributes of the class.\n","\n","\n","---\n","\n","The __init__ method lets the class initialize the object's attributes and serves no other purpose. It is only used within classes.\n","\n","\n","---\n","\n","init is short for initialization. It is a constructor which gets called when you make an instance of the class and it is not necessary. But usually it our practice to write init method for setting default state of the object."],"metadata":{"id":"U44Y4YYJclYt"}},{"cell_type":"code","source":[],"metadata":{"id":"mm0dW6t4coC4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q6. What is the process for creating a class instance?"],"metadata":{"id":"NU8QvFOxcrk9"}},{"cell_type":"markdown","source":["Ans: -\n","\n","When you create an object, you are creating an instance of a class, therefore \"instantiating\" a class.\n","\n","\n","---\n","\n","To create instances of a class, you call the class using class name and pass in whatever arguments its __init__ method accepts."],"metadata":{"id":"wY6vPhtPctCK"}},{"cell_type":"code","source":["class MyClass:\n","  x = 5\n","p1 = MyClass()\n","print(p1.x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8mobd9SGcvDN","executionInfo":{"status":"ok","timestamp":1674024646238,"user_tz":-330,"elapsed":23,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"c9da3d91-4b1e-404d-feaa-b1ff2532bf73"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["5\n"]}]},{"cell_type":"code","source":["class Employee:\n","   'Common base class for all employees'\n","   empCount = 0\n","\n","   def __init__(self, name, salary):\n","      self.name = name\n","      self.salary = salary\n","      Employee.empCount += 1\n","   \n","   def displayCount(self):\n","     print(\"Total Employee %d\" % Employee.empCount)\n","\n","   def displayEmployee(self):\n","      print (\"Name : \", self.name,  \", Salary: \", self.salary)"],"metadata":{"id":"F6elFBABteov","executionInfo":{"status":"ok","timestamp":1674025900294,"user_tz":-330,"elapsed":522,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["emp = Employee('padma',0)"],"metadata":{"id":"Zc4AKTl3ynh0","executionInfo":{"status":"ok","timestamp":1674027191470,"user_tz":-330,"elapsed":806,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["emp.displayCount()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EkbWJyl4y9vN","executionInfo":{"status":"ok","timestamp":1674027214203,"user_tz":-330,"elapsed":655,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"c0a39d90-7128-47ba-f81b-bc60f96635b5"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Total Employee 1\n"]}]},{"cell_type":"code","source":["emp.displayEmployee()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"98fs_LiezC_a","executionInfo":{"status":"ok","timestamp":1674027229379,"user_tz":-330,"elapsed":4,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"7edb307a-86f7-406c-a131-d79ba52e2ce3"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Name :  padma , Salary:  0\n"]}]},{"cell_type":"markdown","source":["## Q7. What is the process for creating a class?"],"metadata":{"id":"Ckgg51NMcvfe"}},{"cell_type":"markdown","source":["Ans: -\n","\n","class definitions begin with a class keyword.\n","\n","\n","---\n","\n","\n","1. Create a Class. To create a class, use the keyword class : ...\n","2. Create Object. Now we can use the class named MyClass to create objects: ...\n","3. The self Parameter. ...\n","4. Modify Object Properties. ...\n","5. Delete Object Properties. ...\n","6. Delete Objects.\n"],"metadata":{"id":"0KzfHodWczAj"}},{"cell_type":"code","source":["class demo:\n","    '''This is a docstring. I have created a new class'''\n","    pass"],"metadata":{"id":"NV-VGlSBc05T","executionInfo":{"status":"ok","timestamp":1674024679774,"user_tz":-330,"elapsed":5,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}}},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":["## Q8. How would you define the superclasses of a class?"],"metadata":{"id":"mpgE0uJSc1Tf"}},{"cell_type":"markdown","source":["Ans: -\n","\n","The super() function returns a parent class object and can be used to access the attributes or methods of the parent class inside the child class.\n","\n","\n","---\n","\n","The class from which a class inherits is called the parent or superclass. A class which inherits from a superclass is called a subclass, also called heir class or child class. Superclasses are sometimes called ancestors as well.\n","\n","\n","---\n","\n","A superclass is the class from which many subclasses can be created. The subclasses inherit the characteristics of a superclass. The superclass is also known as the parent class or base class. In the above example, Vehicle is the Superclass and its subclasses are Car, Truck and Motorcycle."],"metadata":{"id":"O102FLuTc40D"}},{"cell_type":"code","source":[],"metadata":{"id":"QdHP5ko0c6pP"},"execution_count":null,"outputs":[]}]}