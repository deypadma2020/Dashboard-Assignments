{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMGDvOyKQc66GYh28iiFj0/"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## Q1. Can you create a programme or function that employs both positive and negative indexing? Is there any repercussion if you do so?"],"metadata":{"id":"B6wBD_lR1mHS"}},{"cell_type":"markdown","source":["Ans: -\n","\n","In Python, you can start indexing from the end of an iterable. This is known as negative indexing. This means you can use both positive and negative indexes to access iterables.\n","\n","[link text](https://https://www.toptal.com/python/top-10-mistakes-that-python-programmers-make)"],"metadata":{"id":"LHMBZcGU1l49"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"KPXxmK5O1cSI"},"outputs":[],"source":[]},{"cell_type":"markdown","source":["## Q2. What is the most effective way of starting with 1,000 elements in a Python list? Assume that all elements should be set to the same value."],"metadata":{"id":"56Qq4j104B-H"}},{"cell_type":"markdown","source":["Ans: -\n","\n","The following are some of the ways to initialize lists(we create lists of size 1000 and initialize with zeros) in Python.\n","- Using a for loop and append() ...\n","- Using a while loop with a counter variable. ...\n","- Using list comprehensions. ...\n","- Using the * operator."],"metadata":{"id":"sm8RAo4Q4IyE"}},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3z30u8-W4NSw","executionInfo":{"status":"ok","timestamp":1674566599587,"user_tz":-330,"elapsed":8,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"b5912078-a5d5-4d12-f136-f468a9c68381"},"execution_count":1,"outputs":[{"output_type":"execute_result","data":{"text/plain":["16.666666666666668"]},"metadata":{},"execution_count":1}]},{"cell_type":"markdown","source":["## Q3. How do you slice a list to get any other part while missing the rest? (For example, suppose you want to make a new list with the elements first, third, fifth, seventh, and so on.)"],"metadata":{"id":"3Q-bLEsi4N3k"}},{"cell_type":"markdown","source":["Ans: -\n","\n","It's possible to \"slice\" a list in Python. This will return a specific segment of a given list. For example, the command myList[2] will return the 3rd item in your list (remember that Python begins counting with the number 0)."],"metadata":{"id":"0NXbYM-n4y5u"}},{"cell_type":"code","source":[],"metadata":{"id":"5TkD3pof43_8"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q4. Explain the distinctions between indexing and slicing."],"metadata":{"id":"XHN7ZSWX44Z_"}},{"cell_type":"markdown","source":["Ans: -\n","\n","“Indexing” means referring to an element of an iterable by its position within the iterable. “Slicing” means getting a subset of elements from an iterable based on their indices."],"metadata":{"id":"cFft1gbr5FKz"}},{"cell_type":"code","source":[],"metadata":{"id":"jsYpN8js5Hmn"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q5. What happens if one of the slicing expression's indexes is out of range?"],"metadata":{"id":"2XJRa3rY5IMx"}},{"cell_type":"markdown","source":["Ans: -\n","\n","The slicing operation doesn't raise an error if both your start and stop indices are larger than the sequence length. This is in contrast to simple indexing—if you index an element that is out of bounds, Python will throw an index out of bounds error. However, with slicing it simply returns an empty sequence."],"metadata":{"id":"H39lJH455QNF"}},{"cell_type":"code","source":[],"metadata":{"id":"QelFNm2s5SbW"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q6. If you pass a list to a function, and if you want the function to be able to change the values of the list—so that the list is different after the function returns—what action should you avoid?"],"metadata":{"id":"NPleEZ0r5SyR"}},{"cell_type":"markdown","source":["Ans: -\n","\n","avoid \"print\" function by replacing \"return\""],"metadata":{"id":"K92649rp5Zxe"}},{"cell_type":"code","source":[],"metadata":{"id":"JbPoiyy25crO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q7. What is the concept of an unbalanced matrix?"],"metadata":{"id":"0HEogDHG5dKN"}},{"cell_type":"markdown","source":["Ans: -\n","\n","- Whenever the cost matrix of an assignment problem is not a square matrix, that is, whenever the number of sources is not equal to the number of destinations, the assignment problem is called an unbalanced assignment problem.\n","- If the given matrix is not a square matrix, the assignment problem is called an unbalanced problem. In such type of problems, add dummy row(s) or column(s) with the cost elements as zero to convert the matrix as a square matrix"],"metadata":{"id":"UgHE6BTg5hnU"}},{"cell_type":"code","source":[],"metadata":{"id":"Ib66-EJT5v4A"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q8. Why is it necessary to use either list comprehension or a loop to create arbitrarily large matrices?"],"metadata":{"id":"6QRCBkrL5wd0"}},{"cell_type":"markdown","source":["Ans: -\n","\n","List comprehensions apply an arbitrary expression to items in an iterable rather than applying function."],"metadata":{"id":"SSbOV7kJ58vZ"}},{"cell_type":"code","source":[],"metadata":{"id":"QXjYQ0HN6Oop"},"execution_count":null,"outputs":[]}]}