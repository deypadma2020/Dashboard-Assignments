{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNz58s8x5CegbM4TxOJgpuc"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## 1. What are the new features added in Python 3.8 version?"],"metadata":{"id":"GALksyyEnvjk"}},{"cell_type":"markdown","source":["Ans: -\n","\n","- There is a new function parameter syntax “/” which indicates that some function parameters must be specified positionally and can't be used as keyword arguments. The addition of “/” improves the language's consistency and allows a robust API design.\n","- Python 3.8 has released a new feature in the form of a walrus operator, the name resembles the eyes and tusk of a walrus. It is an assignment operator “:=” that is used to assign values to a variable as a larger part of the expression."],"metadata":{"id":"g1uaaBa-nvgD"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"WRwSwUjKnrcW"},"outputs":[],"source":[]},{"cell_type":"markdown","source":["## 2. What is monkey patching in Python?"],"metadata":{"id":"ei78L70vn8eG"}},{"cell_type":"markdown","source":["Ans: -\n","\n","Monkey patching in python refers to modifying or updating a piece of code or class or any module at the runtime. In simple words, we can change the behavior or working of a class/ module at the runtime without changing the whole python code."],"metadata":{"id":"r2kV8y3an-l7"}},{"cell_type":"code","source":[],"metadata":{"id":"kB3DhSW6oAkN"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 3. What is the difference between a shallow copy and deep copy?"],"metadata":{"id":"FwXcsYUZoA8g"}},{"cell_type":"markdown","source":["Ans: -\n","\n","- In Shallow copy, a copy of the original object is stored and only the reference address is finally copied. In Deep copy, the copy of the original object and the repetitive copies both are stored.\n","- A shallow copy constructs a new compound object and then (to the extent possible) inserts references into it to the objects found in the original. A deep copy constructs a new compound object and then, recursively, inserts copies into it of the objects found in the original."],"metadata":{"id":"EzqXOC57oGtx"}},{"cell_type":"code","source":[],"metadata":{"id":"9Rte3tORoIqN"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 4. What is the maximum possible length of an identifier?"],"metadata":{"id":"qUlvNG62oJLf"}},{"cell_type":"markdown","source":["Ans: -\n","\n","An identifier can have a maximum length of 79 characters in Python. Python is one of the most popular programming languages."],"metadata":{"id":"gDb-CHXPoVUD"}},{"cell_type":"code","source":[],"metadata":{"id":"tGbmPy6mobFa"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 5. What is generator comprehension?"],"metadata":{"id":"7cHxRusYodn-"}},{"cell_type":"markdown","source":["Ans: -\n","\n","A generator comprehension is a single-line specification for defining a generator in Python. It is absolutely essential to learn this syntax in order to write simple and readable code. Note: Generator comprehensions are not the only method for defining generators in Python."],"metadata":{"id":"39V3qCg6ojnh"}},{"cell_type":"code","source":[],"metadata":{"id":"oHGHwAY1om6_"},"execution_count":null,"outputs":[]}]}