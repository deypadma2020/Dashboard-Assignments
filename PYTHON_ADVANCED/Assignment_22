{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOhmFCLGsD3G6OJZx+kh46B"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## Q1. What are the benefits of the built-in array package, if any?"],"metadata":{"id":"862zlK9BL3Z9"}},{"cell_type":"markdown","source":["Ans: -\n","\n","Advantages of Arrays\n","- Arrays are similar to lists. ...\n","- The size of the array is not fixed in Python. ...\n","- Arrays can grow or shrink in memory dynamically (during runtime).\n","- Arrays are useful to handle a collection of elements like a group of numbers or characters."],"metadata":{"id":"YFz_500JL3Wh"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"c06ueLWDL0_v"},"outputs":[],"source":[]},{"cell_type":"markdown","source":["## Q2. What are some of the array package's limitations?"],"metadata":{"id":"q-S8ouGYMC7Y"}},{"cell_type":"markdown","source":["Ans: -\n","\n","An array has a fixed size which means you cannot add/delete elements after creation. You also cannot resize them dynamically. Unlike lists in Python, cannot store values of different data types in a single array."],"metadata":{"id":"iKayxWMkMHOr"}},{"cell_type":"code","source":[],"metadata":{"id":"A3Qkn11IMIrA"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q3. Describe the main differences between the array and numpy packages."],"metadata":{"id":"exq5KG1cMJEs"}},{"cell_type":"markdown","source":["Ans: -\n","\n","NumPy arrays have a fixed size at creation, unlike Python lists (which can grow dynamically). Changing the size of an ndarray will create a new array and delete the original. The elements in a NumPy array are all required to be of the same data type, and thus will be the same size in memory."],"metadata":{"id":"hhrdVQm3MMj2"}},{"cell_type":"code","source":[],"metadata":{"id":"hrvGy7fFMOTZ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q4. Explain the distinctions between the empty, ones, and zeros functions."],"metadata":{"id":"Tbq_u9ETMOsa"}},{"cell_type":"markdown","source":["Ans: -\n","\n","empty, unlike zeros, does not set the array values to zero, and may therefore be marginally faster. On the other hand, it requires the user to manually set all the values in the array, and should be used with caution. Return a new array setting values to zero."],"metadata":{"id":"ioxOrEn6MRwC"}},{"cell_type":"code","source":[],"metadata":{"id":"cxBltf44MTFV"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q5. In the fromfunction function, which is used to construct new arrays, what is the role of the callable argument?"],"metadata":{"id":"RewujHmKMTmd"}},{"cell_type":"markdown","source":["Ans: -\n","\n","empty, unlike zeros, does not set the array values to zero, and may therefore be marginally faster. On the other hand, it requires the user to manually set all the values in the array, and should be used with caution. Return a new array setting values to zero."],"metadata":{"id":"Is1pkZBgMZL8"}},{"cell_type":"code","source":[],"metadata":{"id":"_pyGh-8nMbVe"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q6. What happens when a numpy array is combined with a single-value operand (a scalar, such as an int or a floating-point value) through addition, as in the expression A + n?"],"metadata":{"id":"zf5XRqhSMbtj"}},{"cell_type":"markdown","source":["Ans: -\n","\n","Arrays are important because they enable you to express batch operations on data without writing any for loops. "],"metadata":{"id":"fpMGADMhMhDH"}},{"cell_type":"code","source":[],"metadata":{"id":"866HkJlwMif1"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q7. Can array-to-scalar operations use combined operation-assign operators (such as += or *=)? What is the outcome?"],"metadata":{"id":"l9V23A8wMjEH"}},{"cell_type":"markdown","source":["Ans: -\n","\n","- There are two reasons to use the assignment operators over the combination of a regular assignment and the binary operation.\n","- "],"metadata":{"id":"XpZtM9GpMofo"}},{"cell_type":"code","source":[],"metadata":{"id":"i3kLis2GMqNn"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q8. Does a numpy array contain fixed-length strings? What happens if you allocate a longer string to one of these arrays?"],"metadata":{"id":"iW3eIcreMqmt"}},{"cell_type":"markdown","source":["Ans: -\n","\n","- This length is fixed and so any change to the array will truncate longer strings to that fixed size. numpy will take care of doing all the conversions when necessary. So by default numpy uses a fixed length string field '<Un' , 4 bytes per encoded character, with the length n set by the longest string passed to np.\n","- Once set, it will only be able to store new string having length not more than the maximum length at the time of the creation"],"metadata":{"id":"u7I1fqtnMvcs"}},{"cell_type":"code","source":[],"metadata":{"id":"pAG2_CNaMxfp"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q9. What happens when you combine two numpy arrays using an operation like addition (+) or multiplication (*)? What are the conditions for combining two numpy arrays?"],"metadata":{"id":"GzcrBHu0Mx29"}},{"cell_type":"markdown","source":["Ans: -\n","\n","- The same is possible for subtraction, division, multiplication and even for applying functions, like sine, cosine and so on, to an array.\n","- Numpy arrays are mutable objects that have clearly defined in place operations. If a and b are arrays of the same shape, a += b adds the two arrays together, using a as an output buffer.\n","- Join a sequence of arrays along an existing axis. The arrays must have the same shape, except in the dimension corresponding to axis (the first, by default). The axis along which the arrays will be joined. If axis is None, arrays are flattened before use."],"metadata":{"id":"EnrYeIXLM2ih"}},{"cell_type":"code","source":[],"metadata":{"id":"T03dM2IAM4MS"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q10. What is the best way to use a Boolean array to mask another array?"],"metadata":{"id":"84T7WyVTM4nF"}},{"cell_type":"markdown","source":["Ans: -\n","\n","- Masks are an array that contains the list of boolean values for the given condition. The masked array is the arrays that have invalid or missing entries. Using Masking of arrays we can easily handle the missing, invalid, or unwanted entries in our array or dataset/dataframe.\n","- To create a boolean mask from an array, use the ma. make_mask() method in Python Numpy. The function can accept any sequence that is convertible to integers, or nomask. Does not require that contents must be 0s and 1s, values of 0 are interpreted as False, everything else as True."],"metadata":{"id":"KsnaZ3WhM8Lg"}},{"cell_type":"code","source":[],"metadata":{"id":"0IY4tGomM96x"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q11. What are three different ways to get the standard deviation of a wide collection of data using both standard Python and its packages? Sort the three of them by how quickly they execute."],"metadata":{"id":"sFeAAUoIM-V8"}},{"cell_type":"markdown","source":["Ans: -\n","\n","An Example of Calculating Three-Sigma Limit\n","- First, calculate the mean of the observed data. ...\n","- Second, calculate the variance of the set. ...\n","- Third, calculate the standard deviation, which is simply the square root of the variance. ...\n","- Fourth, calculate three-sigma, which is three standard deviations above the mean."],"metadata":{"id":"wcLWPCj4NDc9"}},{"cell_type":"code","source":[],"metadata":{"id":"SqJuKL9ONC6P"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 12. What is the dimensionality of a Boolean mask-generated array?"],"metadata":{"id":"6_HL_zaRNHey"}},{"cell_type":"markdown","source":["Ans: -\n","\n","What is returned is a one-dimensional array filled with all the values that meet this condition; in other words, all the values in positions at which the mask array is True ."],"metadata":{"id":"EeInICWhNLPW"}},{"cell_type":"code","source":[],"metadata":{"id":"qMTB_OeONNTH"},"execution_count":null,"outputs":[]}]}