{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyO77lsAUoawta/oeOpyW7AA"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## Q1. Describe three applications for exception processing."],"metadata":{"id":"1rqU5HBrBI55"}},{"cell_type":"markdown","source":["Ans: -\n","\n","Raised when the specified key is not found in the dictionary. Raised when an identifier is not found in the local or global namespace. Raised when trying to access a local variable in a function or method but no value has been assigned to it. Base class for all exceptions that occur outside the Python environment.\n","\n","---\n","\n","There are mainly three kinds of distinguishable errors in Python: syntax errors, exceptions and logical errors."],"metadata":{"id":"O6jG3MaxBI2U"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"-c6qwTpLBGDE"},"outputs":[],"source":[]},{"cell_type":"markdown","source":["## Q2. What happens if you don't do something extra to treat an exception?"],"metadata":{"id":"22kB5UZgBSdK"}},{"cell_type":"markdown","source":["Ans: -\n","\n","An exception object is created when a Python script raises an exception. If the script explicitly doesn't handle the exception, the program will be forced to terminate abruptly.\n","\n","---\n","\n","When an exception occurred, if you don't handle it, the program terminates abruptly and the code past the line that caused the exception will not get executed."],"metadata":{"id":"-zomdVnPBYC3"}},{"cell_type":"code","source":[],"metadata":{"id":"kdVLepwsBaLI"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q3. What are your options for recovering from an exception in your script?"],"metadata":{"id":"jKPG9b3TBalK"}},{"cell_type":"markdown","source":["Ans: -\n","\n","You can also provide a generic except clause, which handles any exception. After the except clause(s), you can include an else-clause. The code in the else-block executes if the code in the try: block does not raise an exception. The else-block is a good place for code that does not need the try: block's protection."],"metadata":{"id":"-dR1VL1WBex4"}},{"cell_type":"code","source":[],"metadata":{"id":"O6EqEMukBg3t"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q4. Describe two methods for triggering exceptions in your script."],"metadata":{"id":"k4E8cVxtBhb0"}},{"cell_type":"markdown","source":["Ans: -\n","\n","To avoid such a scenario, there are two methods to handle Python exceptions: Try – This method catches the exceptions raised by the program. Raise – Triggers an exception manually using custom exceptions.\n","\n","---\n","\n","To avoid such a scenario, there are two methods to handle Python exceptions:\n","- Try – This method catches the exceptions raised by the program.\n","- Raise – Triggers an exception manually using custom exceptions."],"metadata":{"id":"Tb6ERHTmBl8z"}},{"cell_type":"code","source":[],"metadata":{"id":"rvnEV-T7BoXz"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Q5. Identify two methods for specifying actions to be executed at termination time, regardless of whether or not an exception exists."],"metadata":{"id":"wyJtN1wMBoxP"}},{"cell_type":"markdown","source":["Ans: -\n","\n","Finally Statement in Python\n","Finally block always executes irrespective of an exception being thrown or not. The final keyword allows you to create a block of code that follows a try-catch block. Finally, clause is optional. It is intended to define clean-up actions which should be that executed in all conditions."],"metadata":{"id":"pJ0e-AagBwvh"}},{"cell_type":"code","source":[],"metadata":{"id":"x2TuMBvxBzP_"},"execution_count":null,"outputs":[]}]}