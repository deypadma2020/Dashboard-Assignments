{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPG1mj4/0dIgLb1YG0I11fZ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## 1. Make a class called Thing with no contents and print it. Then, create an object called example from this class and also print it. Are the printed values the same or different?"],"metadata":{"id":"SUF7-U_2NA1i"}},{"cell_type":"markdown","source":["Ans: -\n","\n"],"metadata":{"id":"B6RPBJ65NAxi"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"ttQ42eD4INFI","executionInfo":{"status":"ok","timestamp":1671600378807,"user_tz":-330,"elapsed":9,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}}},"outputs":[],"source":["class Thing:\n","    pass"]},{"cell_type":"code","source":["print(Thing)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KPQ77IjnJX4w","executionInfo":{"status":"ok","timestamp":1671600381830,"user_tz":-330,"elapsed":6,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"fee63ba2-50b1-4563-8520-b90b983105a1"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["<class '__main__.Thing'>\n"]}]},{"cell_type":"code","source":["example = Thing()\n","print(example)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GdqAO48RJdfD","executionInfo":{"status":"ok","timestamp":1671600402134,"user_tz":-330,"elapsed":5,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"b92e81aa-e595-47f4-c8b1-4b88e3ed2d97"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["<__main__.Thing object at 0x7f63c6b1c910>\n"]}]},{"cell_type":"markdown","source":["- Printed values are not same, it prints, class and object details."],"metadata":{"id":"8UMoEw6CJmyp"}},{"cell_type":"markdown","source":["## 2. Create a new class called Thing2 and add the value &#39;abc&#39; to the letters class attribute. Letters should be printed."],"metadata":{"id":"ARWpc-WNNMb9"}},{"cell_type":"markdown","source":["Ans: -\n","\n"],"metadata":{"id":"myNLT_oTNVRs"}},{"cell_type":"code","source":["class Thing2:\n","    letters = 'abc'\n","Thing2.letters"],"metadata":{"id":"hlz5LuqSNXYN","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1671600461955,"user_tz":-330,"elapsed":81,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"828227ca-f1e5-40b5-a48a-4743e2ac49b4"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'abc'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["## 3. Make yet another class called, of course, Thing3. This time, assign the value &#39;xyz&#39; to an instance (object) attribute called letters. Print letters. Do you need to make an object from the class to do this?"],"metadata":{"id":"-nwKoQwENX9T"}},{"cell_type":"markdown","source":["Ans: -\n","\n"],"metadata":{"id":"Yp0RbyhcNie-"}},{"cell_type":"code","source":["class Thing3:\n","    def __init__(self,letter):\n","        self.letter = letter\n","    def letters(self):\n","        print(self.letter)\n","Thing3('xyz').letters()"],"metadata":{"id":"9EqIBw5RNi_5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1671600484951,"user_tz":-330,"elapsed":1030,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"8c99ef2a-f174-49e7-b5c9-fde85417c962"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["xyz\n"]}]},{"cell_type":"markdown","source":["## 4. Create an Element class with the instance attributes name, symbol, and number. Create a class object with the values &#39;Hydrogen,&#39; &#39;H,&#39; and 1."],"metadata":{"id":"pk8IcXAvNj3e"}},{"cell_type":"markdown","source":["Ans: -\n","\n"],"metadata":{"id":"mR6WcfufN4UK"}},{"cell_type":"code","source":["class Element:\n","    def __init__(self,name,symbol,number):\n","        self.name = name\n","        self.symbol = symbol\n","        self.number = number\n","    def printThem(self):\n","        print(self.name,self.symbol,self.number)"],"metadata":{"id":"LSvoD3dKN4zM","executionInfo":{"status":"ok","timestamp":1671600510482,"user_tz":-330,"elapsed":477,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["obj = Element('Hydrogen','H',1)\n","obj.name"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"Gd-uZdYUJ5F9","executionInfo":{"status":"ok","timestamp":1671600524259,"user_tz":-330,"elapsed":507,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"f896f427-ed5e-4b1b-eb27-268793fa81fc"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Hydrogen'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["## 5. Make a dictionary with these keys and values: &#39;name&#39;: &#39;Hydrogen&#39;, &#39;symbol&#39;: &#39;H&#39;, &#39;number&#39;: 1. Then, create an object called hydrogen from class Element using this dictionary."],"metadata":{"id":"RYFIh3bnN5PU"}},{"cell_type":"markdown","source":["Ans: -\n","\n"],"metadata":{"id":"IKX1ugIaOE5C"}},{"cell_type":"code","source":["dict = {'name':'Hydrogen', 'symbol':'H','number': 1}\n","hydrogen = Element(**dict) # using dictionary unpacking **\n","hydrogen.symbol"],"metadata":{"id":"hhsp1809OKHW","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1671600541142,"user_tz":-330,"elapsed":15,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"181a723c-ec97-4c45-b88c-599e56067cc9"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'H'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["## 6. For the Element class, define a method called dump() that prints the values of the objectâ€™s attributes (name, symbol, and number). Create the hydrogen object from this new definition and use dump() to print its attributes."],"metadata":{"id":"q7fuKymxOLbY"}},{"cell_type":"markdown","source":["Ans: -\n","\n"],"metadata":{"id":"U_A7CiInOTej"}},{"cell_type":"code","source":["class Element:\n","    def __init__(self,name,symbol,number):\n","        self.name = name\n","        self.symbol = symbol\n","        self.number = number\n","    def dump(self):\n","        print(self.name,self.symbol,self.number)"],"metadata":{"id":"D--5JGJEOUDL","executionInfo":{"status":"ok","timestamp":1671600562229,"user_tz":-330,"elapsed":596,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["hydrogen = Element('Hydrogen','H',1)\n","hydrogen.dump()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ThLjRdUWKIF2","executionInfo":{"status":"ok","timestamp":1671600575453,"user_tz":-330,"elapsed":7,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"d84365a4-f6b9-40f6-d3e9-5a4eb3256e8c"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Hydrogen H 1\n"]}]},{"cell_type":"markdown","source":["## 7. Call print(hydrogen). In the definition of Element, change the name of method dump to __str__, create a new hydrogen object, and call print(hydrogen) again."],"metadata":{"id":"X_tBRTPpOU25"}},{"cell_type":"markdown","source":["Ans: -\n","\n"],"metadata":{"id":"pMdpm9FuObdo"}},{"cell_type":"code","source":["class Element:\n","    def __init__(self,name,symbol,number):\n","        self.name = name\n","        self.symbol = symbol\n","        self.number = number\n","    def __str__(self):\n","        return ('name=%s, symbol=%s, number=%s'% (self.name, self.symbol, self.number) )"],"metadata":{"id":"SMEdoa3EObyZ","executionInfo":{"status":"ok","timestamp":1671600592324,"user_tz":-330,"elapsed":39,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["hydrogen = Element('Hydrogen','H',1)\n","print(hydrogen)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OgRe-p9zKP2m","executionInfo":{"status":"ok","timestamp":1671600606884,"user_tz":-330,"elapsed":11,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"a6db89cc-ea6b-4488-ccdb-c2db1e3d00a7"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["name=Hydrogen, symbol=H, number=1\n"]}]},{"cell_type":"markdown","source":["## 8. Modify Element to make the attributes name, symbol, and number private. Define a getter property for each to return its value."],"metadata":{"id":"ONxETwKxOcEp"}},{"cell_type":"markdown","source":["Ans: -\n","\n"],"metadata":{"id":"HPpU91sGOh0E"}},{"cell_type":"code","source":["class Element(): \n","    def __init__(self ,name,symbol,number):\n","        self.__name = name\n","        self.__symbol = symbol\n","        self.__number = number\n","    @property\n","    def name(self):\n","        return (self.__name)\n","    @property\n","    def symbol(self):\n","        return (self.__symbol)\n","    @property\n","    def number(self):\n","        return (self.__number)"],"metadata":{"id":"XsqSY-zWOiEW","executionInfo":{"status":"ok","timestamp":1671600625256,"user_tz":-330,"elapsed":5,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["hydrogen = Element('Hydrogen','H',1)\n","hydrogen.name"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"nSMLFhh9KXzu","executionInfo":{"status":"ok","timestamp":1671600640224,"user_tz":-330,"elapsed":559,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"885b8170-2b30-4c30-b5b4-3a56eda7aefd"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Hydrogen'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","source":["## 9. Define three classes: Bear, Rabbit, and Octothorpe. For each, define only one method: eats(). This should return &#39;berries&#39; (Bear), &#39;clover&#39; (Rabbit), or &#39;campers&#39; (Octothorpe). Create one object from each and print what it eats."],"metadata":{"id":"piWcECr4OieN"}},{"cell_type":"markdown","source":["Ans: -\n","\n"],"metadata":{"id":"2GjcEHgqOpwa"}},{"cell_type":"code","source":["class Bear:\n","    def eats():\n","        print('berries')\n","\n","class Rabbit:\n","    def eats():\n","        print('clover')\n","\n","class Octothorpe:\n","    def eats():\n","        print('campers')"],"metadata":{"id":"Es5r3gj_OqCe","executionInfo":{"status":"ok","timestamp":1671600655348,"user_tz":-330,"elapsed":4,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["Bear.eats()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ojKlzU_eKfv6","executionInfo":{"status":"ok","timestamp":1671600673909,"user_tz":-330,"elapsed":664,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"17d5c193-d055-4303-bbf9-fcef364f9dd4"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["berries\n"]}]},{"cell_type":"code","source":["Rabbit.eats()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kPa1g9rAKfnj","executionInfo":{"status":"ok","timestamp":1671600692517,"user_tz":-330,"elapsed":27,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"ca957ca2-c5b6-46cd-9c37-e70e734bd2de"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["clover\n"]}]},{"cell_type":"code","source":["Octothorpe.eats()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mQPyLM2ZKfjr","executionInfo":{"status":"ok","timestamp":1671600703881,"user_tz":-330,"elapsed":9,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"0cc7563c-c474-40e3-db09-5b41e535f216"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["campers\n"]}]},{"cell_type":"markdown","source":["## 10. Define these classes: Laser, Claw, and SmartPhone. Each has only one method: does(). This returns &#39;disintegrate&#39; (Laser), &#39;crush&#39; (Claw), or &#39;ring&#39; (SmartPhone). Then, define the class Robot that has one instance (object) of each of these. Define a does() method for the Robot that prints what its component objects do."],"metadata":{"id":"XrH4yFbEOqYo"}},{"cell_type":"markdown","source":["Ans: -\n","\n"],"metadata":{"id":"7qeD2CiROy39"}},{"cell_type":"code","source":["class Laser:\n","    def does(self):\n","        return('disitegrate')\n","class Claw:\n","    def does(self):\n","        return('crush')\n","class SmartPhone:\n","    def does(self):\n","        return('ring')\n","        \n","class Robot:\n","    def __init__(self):\n","        self.laser = Laser()\n","        self.claw = Claw()\n","        self.smartphone = SmartPhone()\n","    def does(self):\n","        return ('Laser is %s, Claw is %s, SmartPhone is %s' % (self.laser.does(),self.claw.does(),self.smartphone.does()))"],"metadata":{"id":"FslXIwZIOzVS","executionInfo":{"status":"ok","timestamp":1671600739345,"user_tz":-330,"elapsed":7,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["robo = Robot()"],"metadata":{"id":"ArkcLDmXKwt0","executionInfo":{"status":"ok","timestamp":1671600752082,"user_tz":-330,"elapsed":4,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["robo.does()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"pvYZ_otgKz5H","executionInfo":{"status":"ok","timestamp":1671600763479,"user_tz":-330,"elapsed":13,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"d01fa6a4-7e29-4837-dfcf-8391113c9062"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Laser is disitegrate, Claw is crush, SmartPhone is ring'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":21}]}]}